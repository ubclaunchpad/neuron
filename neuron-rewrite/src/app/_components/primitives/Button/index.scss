@use "typography" as *;
@use "variables" as *;
@use "mixins" as *;
@use 'sass:color';

.button {
  --button-background: #{$button-primary};
  --button-foreground: #{$bg-white};
  --button-border: #{$button-primary};

  @include text-reg; 
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $padding-sm;
  box-shadow: $shadow-regular;
  border-radius: $radius-regular;
  padding: $padding-sm $padding-md;

  background: var(--button-background);
  color: var(--button-foreground);
  border: 1px solid var(--button-border);

  cursor: pointer;
  user-select: none;

  &.small { 
    @include text-sm;
    padding: $padding-xs $padding-sm; 
  }

  @mixin theme($main) {
    &.primary {
      --button-background: #{$main};
      --button-foreground: #{$bg-white};
      --button-border: #{$main};
    }

    &.secondary {
      --button-background: #{rgba($main, .10)};   // 10% main on white
      --button-foreground: #{$main};
      --button-border: #{$main};
    }
  }

  /* Tones */
  @include theme($button-primary);
  &.negative { @include theme($button-negative); }
  &.positive { @include theme($button-positive); }

  &[data-disabled] { 
    cursor: not-allowed;
    --button-background: #{$button-disabled};
    --button-foreground: #{$text-dark};
    --button-border: #{$button-disabled};
  }
  &[data-pressed] { 
    transform: translateY(1px); 
  }

  > svg {
    @include text-icon;
  }

  > span {
    line-height: 1;
  }
}

.link {
  @include text-reg; 
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $padding-xs;

  cursor: pointer;
  user-select: none;

  &.small { 
    @include text-sm;
  }

  &[data-disabled] { 
    cursor: not-allowed;
  }
  &[data-pressed] { 
    transform: translateY(1px); 
  }

  > svg {
    @include text-icon;
  }
}