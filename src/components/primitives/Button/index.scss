@use "typography" as *;
@use "variables" as *;
@use "mixins" as *;

.button {
  @include text-reg;

  /* layout */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $padding-xs;
  padding: $padding-sm $padding-md;
  line-height: 1;

  /* visuals */
  border-radius: $radius-regular;
  box-shadow: $shadow-regular;

  /* interactions */
  cursor: pointer;
  user-select: none;
  transition-property: background-color, border-color, color;
  transition: $transition-hover;

  /* theme variables (default = primary) */
  --tone: #{$button-primary};
  --tone-hover: #{$button-primary-hover};

  /* variables use in scss, derived from theme */
  --btn-bg: var(--tone);
  --btn-bg-hover: var(--tone-hover);
  --btn-text: #{$bg-white};
  --btn-icon: #{$bg-white};
  --btn-icon-hover: #{$bg-white-hover};
  --btn-border: var(--tone);
  --btn-border-hover: var(--tone-hover);

  background-color: var(--btn-bg);
  color: var(--btn-text);
  border: 1px solid var(--btn-border);

  > svg {
    @include text-icon;
    color: var(--btn-icon);
    transition: color $transition-hover;
  }
  > span { 
    line-height: 1; 
  }

  &.icon-only {
    padding: $padding-sm;
  }

  /* size */
  &.small {
    @include text-sm;
    line-height: 1;
    padding: $padding-xs $padding-md;

    &.icon-only {
      padding: $padding-xs;
    }
  }

  &.x-small {
    @include text-xs;
    line-height: 1;
    padding: $padding-xxs $padding-xs;

    &.icon-only {
      padding: $padding-xxs;
    }
  }

  /* theme variants */
  &.positive {
    --tone: #{$button-positive};
    --tone-hover: #{$button-positive-hover};
  }

  &.negative {
    --tone: #{$button-negative};
    --tone-hover: #{$button-negative-hover};
  }

  &.colored {
    --btn-bg: color-mix(in srgb, var(--tone) 10%, transparent);
    --btn-bg-hover: color-mix(in srgb, var(--tone-hover) 10%, transparent);
    --btn-text: #{$text-dark};
    --btn-icon: #{$text-grey};
    --btn-icon-hover: #{$text-grey-hover};
    --btn-border: var(--tone);
    --btn-border-hover: var(--tone-hover);
  }

  &.secondary {
    --btn-bg: transparent;
    --btn-bg-hover: #{$bg-white-hover};
    --btn-text: #{$text-dark};
    --btn-icon: #{$text-grey};
    --btn-icon-hover: #{$text-grey-hover};
    --btn-border: var(--tone);
    --btn-border-hover: var(--tone-hover);
  }

  &.ghost {
    --btn-bg: transparent;
    --btn-bg-hover: color-mix(in srgb, var(--tone-hover) 10%, transparent);
    --btn-text: #{$text-dark};
    --btn-icon: #{$text-grey};
    --btn-icon-hover: #{$text-grey-hover};
    border: none;
    box-shadow: none;
  }

  /* states */
  &[data-hovered] {
    background-color: var(--btn-bg-hover);
    > svg { color: var(--btn-icon); }
  }

  &[data-pressed] {
    transform: translateY(1px);
  }

  &[data-disabled] {
    cursor: not-allowed;
    background: $button-disabled;
    color: $text-dark;
    border-color: $button-disabled;

    > svg { color: $text-dark; }

    &[data-hovered] {
      background: $button-disabled; /* stable on hover */
      > svg { color: $text-dark; }
    }
  }
}

.link {
  @include text-reg;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $padding-xs;
  line-height: 1;

  cursor: pointer;
  user-select: none;

  &.small { @include text-sm; }
  &.x-small { @include text-xs; } 

  &[data-pressed]  { transform: translateY(1px); }
  &[data-disabled] { cursor: not-allowed; }

  > svg { @include text-icon; }
}
